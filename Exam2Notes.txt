Applications of Stacks
    - functions are run by a stack 
    - runtime stack
        - where are variables stored?
            - stack (everything else)
            - heap (new)
            - global (static)
    - math is a stack   
        - specifically post fix uses a stack (23+ instead of 2+3)
            - evaluating post-fix
                - scan left to right:
                    if its a number
                        push
                    if operator
                        pop B
                        pop A 
                        push (A op B)
Queue
    - tis like an tube 
    - put stuff in back and remove stuff from front 
    _____________________
   |                     |
    ---------------------

    - add stuff: enqueue
    - remove stuff: dequeue
    - getFront
    - isFull
    - isEmpty
    - size
    - makeEmpty 

    - using an array
        - basically position 0 is the front, and the highet position is the back
        - once you dequeue something, just move where the front variable is 
        - if you run over the end, you basically just requeue over stuff you dequeued already 
            - think of this like a donut shaped array 
            
Operating System 
    - a program or set of programs that manages resources for the computer
        - software packages
        - memory management:
            - virtual memory/paging: thomas makes each program think it has infinite memory available to it
            - paging: finite memory available to them, but pages are given and taken away based on how you need them 
                - certain set of pages that are part of your virtual memory, you can only write on those pages 
                - this makes sure you don't write on someone elses program while its running 
        - storage (disk) management 
        - security/protection  
            - you cant change someones program while its running 
        - CPU management: who gets what memory/time
            - in fact only one programming is running at once, but they switch so quickly that we think multiple things are running at once
        - process management - giving processes CPU time
            - process: program in execution
                - has a user, memory allocated to it, CPU allocated to it
    - parts of an operating system
        - application software: stuff you can remove and the computer is still useful (i.e. photoshop, word, etc.)
        - system software: stuff that does vital stuff like print
        - kernel: the most important part of the operating system that manages all the stuff above
        - device drivers: piece of software that translates between the operating system and the device
        - device controller: controls the device and drivers

Linked List
    - another way to implement a stack
    - works like a list in python in that it is a series of boxes that are connected by pointers, the last box has a null pointer
        - head pointer tells us where to start --- with a stack this is just called the top
    - push:
        1. make new node
        2. put D in data part of node 
        3. point from D to top (aka C node)
        4. move top pointer to point at D
    - pop:
        1. copy old top and save 
        2. move top to one below 
        3. return old top
Local Area Network (LAN)
    - ethernet 
        - bus-style broadcast network 
    - sections are connected using 
        - switch (smart)
            - pass relevant stuff not everything 
            - also only passes to the relevant locations 
        - hub/repeater/bridges (dumb)
            - repeat everything 
    - router
        - contains CPU and can filter packets of information
        - can program router to block specific stuff like facebook or another website
        - also does all the stuff a switch does 

Recursion
    - when a function calls itself 
    - 4 rules of recursion 
        1. have a base case
        2. converge to a base case
        3. trust that recursion works
        4. 